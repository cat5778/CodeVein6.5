#ifndef Enum_h__
#define Enum_h__
enum LOADMODE
{
	LOAD_NOMAL,
	LOAD_NOMAL2,
	LOAD_NOMAL3,
	LOAD_PLAYER,
	LOAD_MONSTER,
	LOAD_BATTLE,
	LOAD_SLIDE,
	LOAD_END
};
enum RESOURCEID		{ 
					RESOURCE_STATIC,
					RESOURCE_LOGO, 
					RESOURCE_STAGE, 
					RESOURCE_END 
					};

enum LOADINGID		{	
					LOADING_STAGE,
					LOADING_BOSS, 
					LOADING_END 
					};

enum DIRECTIONFLAG{
					DIR_F = 1,
					DIR_R = 2,
					DIR_FR= 3,
					DIR_B = 4,
					DIR_BR= 6,
					DIR_L = 8,
					DIR_FL= 9,
					DIR_BL=12,
					};

enum OBJECTSTATE {
	OBJ_IDLE,
	OBJ_WALK,
	OBJ_RUN,
	OBJ_DODGE,
	OBJ_JUMP,
	OBJ_FALL,
	OBJ_ATTACK,
	OBJ_STRONG_ATTACK,
	OBJ_DODGE_ATTACK,
	OBJ_CHARGE_ATTACK,
	OBJ_GUARD,
	OBJ_GUARD_H,
	OBJ_HURT_F,//42
	OBJ_HURT_FR,
	OBJ_HURT_R,
	OBJ_HURT_BR,
	OBJ_HURT_B,
	OBJ_HURT_BL,
	OBJ_HURT_L,
	OBJ_HURT_FL,
	OBJ_STRONG_HURT_F,//42
	OBJ_STRONG_HURT_FR,
	OBJ_STRONG_HURT_R,
	OBJ_STRONG_HURT_BR,
	OBJ_STRONG_HURT_B,
	OBJ_STRONG_HURT_BL,
	OBJ_STRONG_HURT_L,
	OBJ_STRONG_HURT_FL,
	OBJ_RENKETSU_BUFF,
	OBJ_RENKETSU_GROUND,
	OBJ_RENKETSU_BARRIDR,
	OBJ_RENKETSU_ENCHANT,
	OBJ_RENKETSU_SEARCH,
	OBJ_DEAD,
	OBJ_START,
	OBJ_LOCK_WALK_F,//42
	OBJ_LOCK_WALK_FR,
	OBJ_LOCK_WALK_R,
	OBJ_LOCK_WALK_BR,
	OBJ_LOCK_WALK_B,
	OBJ_LOCK_WALK_BL,
	OBJ_LOCK_WALK_L,
	OBJ_LOCK_WALK_FL,
	OBJ_CHECKPOINT_START,
	OBJ_CHECKPOINT_END,
	OBJ_CHECKPOINT_ACTIVATION,
	OBJ_END
				};
enum RUSSIANTSTATE {
	//1Phase
	RUSSIAN_START_IDLE,
	RUSSIAN_BATTLE_START,
	RUSSIAN_BATTLE_IDLE,
	RUSSIAN_IDLE_TURN,
	RUSSIAN_WALK,
	RUSSIAN_RUN,
	RUSSIAN_HURT,
	RUSSIAN_APPERANCE_N,
	RUSSIAN_DOWN,
	RUSSIAN_DODGE,
	RUSSIAN_ATTACK_READY,
	RUSSIAN_ATTACK1,
	RUSSIAN_ATTACK2,
	RUSSIAN_ATTACK3,
	RUSSIAN_ATTACK_SLIDE_S,
	RUSSIAN_ATTACK_SLIDE_L,
	RUSSIAN_ATTACK_SLIDE_E,
	RUSSIAN_ATTACK_HORN1,
	RUSSIAN_ATTACK_HORN2,
	RUSSIAN_ATTACK_JUMP,
	//2Phase
	RUSSIAN_DEFORMATION,
	RUSSIAN_KETSUGI_AIMSHOOT,
	RUSSIAN_FIST_ATTACKBOOST1_S,
	RUSSIAN_FIST_ATTACKBOOST1_L,
	RUSSIAN_FIST_ATTACKBOOST1_A_E,
	RUSSIAN_FIST_ATTACKBOOST1_B_E,
	RUSSIAN_FIST_ATTACKNORMAL1,
	RUSSIAN_FIST_ATTACKJUMP_S,
	RUSSIAN_FIST_ATTACKJUMP_L,
	RUSSIAN_FIST_ATTACKJUMP_E,
	RUSSIAN_FIST_BOOSTUP_S,
	RUSSIAN_FIST_KEYSUGI_ALLRANGE_S,
	RUSSIAN_FIST_KEYSUGI_ALLRANGE_L,
	RUSSIAN_FIST_KEYSUGI_ALLRANGE_E,
	RUSSIAN_DEATH_N,
	RUSSIAN_ICEBLADE_N,
	RUSSIAN_END
};
enum REDDEVILSTATE
{
	RED_Death_F,
	RED_Death_B,
	RED_DownEnd_S,
	RED_DownEnd_P,
	RED_Down_S,
	RED_Down_P,
	RED_Damage_FR,
	RED_Damage_FL,
	RED_Damage_BR,
	RED_Damage_BL,
	RED_Run_F,
	RED_DashAttack_E,
	RED_DashAttack_L,
	RED_DashAttack_S,
	RED_Attack3,
	RED_Attack2,
	RED_Attack1,
	RED_Fight_Idle,
	RED_NoneFight_Idle,
	RED_RedDevil_End
};

enum COCCONDEVILSTATE
{
	CO_Death,
	CO_Damage_B,
	CO_Damage_F,
	CO_NoneFight_Idle,
	CO_Fight_Idle,
	CO_Attack_Shoot_N,
	CO_Attack_Mist_N,
	CO_END
};
enum DAVISSTATE
{
	DV_NoneEventIdle,
	DV_EventIdle,
	DV_Pogitive_Emotion,
	DV_Nagative_Emotion,
	DV_End_State
};



enum COLLIDEROPTION{
					COLL_OPT_OBJECT,
					COLL_OPT_ATTACK,
					COLL_OPT_HURT,
					COLL_OPT_END
					};
enum PIVOT
{
	PIVOT_LT,
	PIVOT_RT,
	PIVOT_M,
	PIVOT_RB,
	PIVOT_LB,
	PIVOT_END
};
enum RBUTTONSTATE
{
	RB_MENU_1,
	RB_MENU_2,
	RB_MENU_3,
	RB_MENU_END,
};
enum LBUTTONSTATE
{
	LB_MENU_1,
	LB_MENU_2,
	LB_MENU_3,
	LB_MENU_4,
	LB_MENU_5,
	LB_MENU_6,
	LB_MENU_7,
	LB_MENU_END,
};

enum UISTATE
{
	UI_SHOP,
	UI_INVEN,
	UI_PORTAL,
	UI_SHOP_SUB,
	UI_INVEN_SUB,
	UI_PORTAL_SUB,
	UI_END
};


#endif // Enum_h__
